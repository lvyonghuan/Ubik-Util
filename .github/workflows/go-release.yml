name: Go Multi-platform Build and Release

on:
  push:
    tags:
      - 'v*' # 当推送带有 'v' 前缀的标签时触发，如 v1.0.0

jobs:
  test:
    name: Test Go Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24' # 可以根据需要修改 Go 版本
          check-latest: true
      
      - name: Get dependencies
        run: go mod download
      
      - name: Run tests
        run: go test -v ./...

  build:
    name: Build and Release
    needs: test # 确保测试通过后才进行构建
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          # 排除不需要的组合
          - goos: windows
            goarch: arm64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24' # 可以根据需要修改 Go 版本
          check-latest: true
      
      - name: Get dependencies
        run: go mod download
      
      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          APP_NAME=$(basename ${{ github.repository }})
          if [ "${{ matrix.goos }}" = "windows" ]; then
            APP_NAME="$APP_NAME.exe"
          fi
          go build -v -o build/$APP_NAME-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.repository }}-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/*
  
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
